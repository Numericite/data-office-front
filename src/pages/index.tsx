import Head from "next/head";
import { fr } from "@codegouvfr/react-dsfr";
import { Accordion } from "@codegouvfr/react-dsfr/Accordion";
import {
  baseFormSchema,
  useBaseDataContractForm,
  type BaseFormSchema,
} from "~/utils/form-schema";
import { tss } from "tss-react";

export default function Home() {
  const { classes, cx } = useStyles();

  const form = useBaseDataContractForm({
    defaultValues: {
      applicantInfo: {
        firstName: "",
        lastName: "",
        phone: "",
        emailPro: "",
        role: "",
      },
      dataProduct: {
        name: "",
        description: "",
        purpose: "",
        targetAudience: "internes",
      },
    } as BaseFormSchema,
    validators: {
      onSubmit: baseFormSchema,
    },
    onSubmit: async (values) => {
      console.log("Form submitted:", values.value);
    },
  });

  const targetAudienceOptions =
    baseFormSchema.shape.dataProduct.shape.targetAudience.options.map(
      (option) => ({
        label: option,
        value: option,
      })
    ) ?? [];

  return (
    <>
      <Head>
        <title>Data Contract Formulaire - Landing</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={fr.cx("fr-mt-4w", "fr-mb-8w")}>
          <h1>Formulaire de demande</h1>
          <p className={fr.cx("fr-text--lg")}>
            Veuillez remplir le formulaire ci-dessous pour soumettre votre
            demande.
          </p>
          <form.AppForm>
            <form
              onSubmit={(e) => {
                e.preventDefault();
                form.handleSubmit();
              }}
              className={classes.formWrapper}
            >
              <div className={cx(classes.formWrapper, classes.section)}>
                <h2 className={cx(fr.cx("fr-h4"), "fr-mb-0")}>
                  Section 1 - Informations générales
                </h2>
                <div
                  className={cx(
                    fr.cx("fr-accordions-group"),
                    classes.arccordionsWrapper
                  )}
                >
                  <Accordion
                    label="Informations sur le demandeur"
                    defaultExpanded
                    className={classes.accordionContent}
                  >
                    <div
                      className={fr.cx("fr-grid-row", "fr-grid-row--gutters")}
                    >
                      <div className={fr.cx("fr-col-6")}>
                        <form.AppField
                          name="applicantInfo.firstName"
                          children={(field) => (
                            <field.TextField label="Prénom" />
                          )}
                        />
                      </div>
                      <div className={fr.cx("fr-col-6")}>
                        <form.AppField
                          name="applicantInfo.lastName"
                          children={(field) => <field.TextField label="Nom" />}
                        />
                      </div>
                    </div>
                    <div
                      className={fr.cx("fr-grid-row", "fr-grid-row--gutters")}
                    >
                      <div className={fr.cx("fr-col-6")}>
                        <form.AppField
                          name="applicantInfo.emailPro"
                          children={(field) => (
                            <field.TextField
                              label="Email profesionnel"
                              kind="email"
                            />
                          )}
                        />
                      </div>
                      <div className={fr.cx("fr-col-6")}>
                        <form.AppField
                          name="applicantInfo.phone"
                          children={(field) => (
                            <field.TextField
                              label="Numéro de téléphone pro"
                              kind="tel"
                            />
                          )}
                        />
                      </div>
                    </div>
                    <div className={fr.cx("fr-mt-3v")}>
                      <form.AppField
                        name="applicantInfo.role"
                        children={(field) => <field.TextField label="Rôle" />}
                      />
                    </div>
                  </Accordion>
                </div>
                <div
                  className={cx(
                    fr.cx("fr-accordions-group"),
                    classes.arccordionsWrapper
                  )}
                >
                  <Accordion
                    label="Le produit data"
                    defaultExpanded
                    className={classes.accordionContent}
                  >
                    <form.AppField
                      name="dataProduct.name"
                      children={(field) => (
                        <field.TextField label="Nom du projet" />
                      )}
                    />
                    <form.AppField
                      name="dataProduct.description"
                      children={(field) => (
                        <field.TextAreaField label="Description exhaustive du projet" />
                      )}
                    />
                    <form.AppField
                      name="dataProduct.purpose"
                      children={(field) => (
                        <field.TextField label="Objectif du projet" />
                      )}
                    />
                    <form.AppField
                      name="dataProduct.targetAudience"
                      children={(field) => (
                        <field.SelectField
                          label="Public cible"
                          options={targetAudienceOptions}
                        />
                      )}
                    />
                  </Accordion>
                </div>
              </div>
              <form.SubscribeButton label="Soumettre" />
            </form>
          </form.AppForm>
        </div>
      </main>
    </>
  );
}

const useStyles = tss.withName(Home.name).create(() => ({
  formWrapper: {
    display: "flex",
    flexDirection: "column",
    gap: fr.spacing("3w"),
  },
  section: {
    padding: fr.spacing("3w"),
    border: "1px solid #ccc",
    borderRadius: fr.spacing("3v"),
  },
  arccordionsWrapper: {
    "& > section > .fr-collapse": {
      margin: 0,
      paddingLeft: fr.spacing("5v"),
      paddingRight: fr.spacing("5v"),
    },
  },
  accordionContent: {
    borderRight: "1px solid #ccc",
    borderLeft: "1px solid #ccc",
  },
}));
