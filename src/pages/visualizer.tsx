import yaml from "yaml";
import Head from "next/head";
import { fr } from "@codegouvfr/react-dsfr";
import {
  baseFormSchema,
  useDataContractForm,
} from "~/utils/forms/data-contract/schema";
import {
  BaseDataContractForm,
  dataContractFormDefaultValues,
} from "~/utils/forms/data-contract/form";
import { tss } from "tss-react";
import { api } from "~/utils/api";
import { Upload } from "@codegouvfr/react-dsfr/Upload";
import { useState } from "react";

export default function Visualizer() {
  const { mutateAsync: createRequest } = api.request.create.useMutation();

  const { classes, cx } = useStyles();

  const [yamlFile, setYamlFile] = useState<File | null>(null);
  const [formData, setFormData] = useState(dataContractFormDefaultValues);

  const onChangeFile = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      setYamlFile(file);
      const reader = new FileReader();
      reader.onload = (event) => {
        const fileContent = event.target?.result;
        if (fileContent) {
          try {
            const parsedData = yaml.parse(fileContent as string);
            setFormData(parsedData);
            form.reset(parsedData);
          } catch (error) {
            console.error("Error parsing YAML file:", error);
          }
        }
      };
      reader.readAsText(file);
    }
  };

  const form = useDataContractForm({
    defaultValues: formData,
    validators: {
      onSubmit: baseFormSchema,
    },
    onSubmit: async (values) => {
      console.log("Form submitted:", values.value);
    },
  });

  return (
    <>
      <Head>
        <title>DCF - Affichage</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={fr.cx("fr-mt-4w", "fr-mb-8w")}>
          <h1 className={fr.cx("fr-h1")}>Visualiseur de formulaire</h1>
          <p className={fr.cx("fr-h5")}>
            Visualisez le formulaire de contrat de donn√©es
          </p>
          <div>
            <Upload
              nativeInputProps={{
                accept: ".yaml, .yml",
                onChange: (e) => onChangeFile(e),
              }}
            />
          </div>
          <div className={cx("fr-mt-4w", classes.formWrapper)}>
            {yamlFile && (
              <form.AppForm>
                <BaseDataContractForm
                  formId="visualizer-data-contract-form"
                  disabled={true}
                  form={form}
                />
              </form.AppForm>
            )}
          </div>
        </div>
      </main>
    </>
  );
}

const useStyles = tss.withName(Visualizer.name).create(() => ({
  formWrapper: {
    display: "flex",
    flexDirection: "column",
    gap: fr.spacing("3w"),
  },
}));
